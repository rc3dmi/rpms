name: Reusable Build and Push

on:
  workflow_call:
    inputs:
      image_name:
        description: "The image name"
        required: true
        type: string
      fedora_release:
        description: "Fedora release for building packages"
        required: true
        type: string
      build_package:
        description: "Wether this workflow builds a package"
        required: true
        type: boolean

env:
  IMAGE_NAME: ${{ inputs.image_name }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository }}

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4

      - name: Install Just
        shell: bash
        run: bash .github/workflows/shared/install-just.sh

      - name: Check Just Syntax
        shell: bash
        run: just check

      - name: Generate tags
        id: generate-tags
        shell: bash
        run: |
          if [ "${{ inputs.build_package }}" = "true" ]
          then
            image_tags="$(just generate-package-tags ${{ inputs.fedora_release }} ${{ inputs.image_name }})"
          else
            image_tags="$(just generate-tags ${{ inputs.fedora_release }})"
          fi
          echo "image_tags=${image_tags}" >> $GITHUB_OUTPUT

      # Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./containerfiles/Containerfile.${{ env.IMAGE_NAME }}
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.generate-tags.outputs.image_tags }}
          oci: true

      # Push the image to GHCR (Image Registry)
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        if: github.event_name != 'pull_request'
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Echo outputs
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"
